1.EOF가 입력될 때까지 문자를 입력받아 대소문자 소문자로 변환하고 한줄에는 4단어씩 각 단어 공백은 하나씩만 출력하는 프로그램

#include <stdio.h>
#include <ctype.h>

void main()
{
 char ch, temp[1024];
 int j, k, len;

 j = k = len = 0;
 while ( 1 )
 {
  ch = getchar();
  if ( ch == EOF || ch == 26 ) break;
  if ( ch == ' ' )
  {
   if ( !k ) {
   continue;}

   temp[len++] = ( ++j < 4 ? ' ' : '\n' );
   k = 0;

   if ( j == 4 ) {
   j = 0;}

   continue;
  }
  k = 1;
  temp[len++] = tolower(ch);
 }

 temp[len] = '\0';
 puts ( temp );
}




2.EOF가 입력될 때까지 문자를 입력받아 대문자는 소문자로 소문자는 대문자로 변환하는 프로그램

#include <stdio.h>
#include <ctype.h>
#include <string.h>



void main()
{
 char s;
 int i= 0;
 char result[100];

 while((s = getchar()) != EOF)
 {  
  if(isupper(s)){
   result[i]=tolower(s);
  }
  else if(islower(s)){
   result[i]=toupper(s);
  }
  else
  {
   result[i] = s;
  }
  i++;
 }
 result[i] = '\0';

 printf("%s",result);

}


3.EOF가 입력될 때까지 문자를 입력받아 문자열에 포함된 단어수를 세는 프로그램

#include <stdio.h>
#include <ctype.h>

#define SIZE 100


void main()
{

 char c;
 char str[100] = {0};
 int h=0,i= 0;

 while((c = getchar()) != EOF){
   str[i] = c;
   i++;
 }
 
 for(i =0 ; str[i]!=0;){
  if( !isspace(str[i]) ) { 
   h++;  //단어수
   while(str[i] != '\0' && !isspace(str[i])) 
    i++;
  }
  else
   i++;
 }

 printf("단어 갯수 : %d 개 \n " ,h);

 

}

4.EOF가 입력될때까지 문자를 입력받아 대소문자 구분없이 각 알파벳 문자가 나타난 횟수를 출력하는 프로그램 

#include <stdio.h>
#include <ctype.h>


void main()
{

 char c;
 int count[26] ={0};
 int n_count =0;
 int i;
 int k = 0;

 while((c = getchar()) != EOF){

  if(isalpha(c)){
   tolower(c);
   count[c - 'a']++;
  }
      if(!isalpha(c)){
   n_count++;
  }
   if(isspace(c))
    k++;

 }

 for(i = 0 ; i < 26; i++){
  printf("%c의 갯수는 %d개 입니다.\n",i+'a', count[i]);}
 printf("그 외의 갯수는 %d입니다.\n", n_count-k);


}

5.EOF가 입력될때까지 문자를 입력받아 문자열에 포함된 모든 공백문자를 삭제하여 출력하는 프로그램

#include <stdio.h>
#include <ctype.h>
 

int main(void){

char c;

 
printf("문자를 입력하세요:");

while ((c=getchar()) != EOF){

   if (isspace(c))

      continue;

   putchar(c);
  

}

  printf("\n");

return 0;

}

6.EOF가 입력될때까지 문자를 입력받고 그 문자들의 소문자 대문자 숫자 기타문자 갯수를 출력하는 프로그램 

#include <stdio.h>
#include <string.h>
#include <ctype.h>


void main(){

 char c;
 int a  =0 , b = 0, e = 0, d = 0;

  
 while((c = getchar()) != EOF){
  if(isupper(c))
   a++;
  else if(islower(c))
   b++;
  else if(isdigit(c))
   d++;
  else
   e++;
 }
 printf("대문자의 갯수는 %d개 \n소문자의 갯수는 %d개 \n숫자의 갯수는 %d개\n기타문자의 갯수는 %d개\n",a,b,d,e);
}




7.문자열을 입력받아 순서를 뒤집은 후에 화면에 출력하는 프로그램

#include <stdio.h>
#include <string.h>

void Reverse(char k[]);

void main()
{
 char k[100] = {'\0'};


 printf("순서를 뒤집고 싶은 문자열을 입력하세요: ");
 gets(k);
 Reverse(k);

}

void Reverse(char k[])
{
 int i = 0;
 int length = 0;


 length = strlen(k);

 for(i=length - 1 ; i > -1 ; i--)
 {

  printf("%c", k[i]);

 }
 printf("\n");

}


8.문자열을 입력받아 축약어를 출력하는 프로그램

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(void) 
{ 
   char A[100] = {0}; 
   char B[100] = {0}; 
   int i = 0,j = 0; 
   printf("축약어로 만들고 싶은 단어를 입력하세요:"); 
   gets(A); 
   while( A[i] != '\0' ) 
   { 

      if( !isspace(A[i]) ) 
      { 
         if( isalpha(A[i]) )
         { 
            B[j] = toupper(A[i]); 
            j++; 
            while( A[i] != '\0' && !isspace( A[i] ) ) 
            i++; 
         } 
      } 
      else 
      i++; 
   } 
   printf("%s",B); 
   return 0; 
} 


9.EOF가 입력될 때까지 단어 수 줄 수 글자 수를 세는 프로그램 , 단 -w -l -c 옵션에 따라 달라지는 프로그램  

#include <stdio.h>
#include <string.h>
#include <ctype.h>


void main(int argc , char* argv[])
{
 int i = 0,j = 0,k =0,h = 0,len,len2;
 int n = 0 , m = 1;
 char str[10000] = {0};
 char c;
 printf("문장의 단어수, 줄수, 글자수를 나타내는 프로그램입니다.\n");
 printf("문장을 입력하세요 (Ctrl + Z 누르면 종료) : ");

 while((c = getchar()) != EOF){
  str[i] = c;
  i++;
 }

 len = strlen(str);
 len2 = sizeof(argv);

 for(i =0 ; str[i] !=0 ;i++){
  if(isalpha(str[i]))
   n++;   // 글자수
  if(str[i] == '\n')
   m++;    //줄수
 }  

 for(i =0 ; str[i]!=0;){
  if( !isspace(str[i]) ) { 
   h++;  //단어수
   while(str[i] != '\0' && !isspace(str[i])) 
    i++;
  }
  else
   i++;
 }

 
 if(argc == 1)
  printf(" 단어수는 %d \n 줄 수는 %d\n 글자수는 %d 입니다 \n",h,m,n);
 else if(argc == 2){
  for(i = 0 ; i < len2 ; i++){ 
   if(strcmp(argv[i],"-w") ==0){
    printf("단어 수는 %d 입니다. \n",h); break;}
   if(strcmp(argv[i],"-l") ==0){
    printf("줄 수는 %d 입니다. \n",m); break;}
   if(strcmp(argv[i],"-c") ==0){
    printf("글자수는 %d 입니다. \n",n); break;}
  } 
 }
 else if(argc == 3){
  for(i= 0; i<len2;i++){
   for(j=0;j<len2;j++){
    if((strcmp(argv[i],"-w")==0) && (strcmp(argv[j],"-l") ==0)){
     printf("단어수는 %d \n 줄 수는 %d \n",h,m); k = 1; break;}
    if((strcmp(argv[i],"-w")==0) && (strcmp(argv[j],"-c") ==0)){
     printf("단어수는 %d \n 글자수는 %d 입니다 \n",h,n);k = 1; break;}
    if((strcmp(argv[i],"-l")==0) && (strcmp(argv[j],"-c") ==0)){
     printf("줄 수는 %d\n 글자수는 %d 입니다 \n",m,n);k =1; break;}
   }
   if(k ==1){
    break;}
  }

 }
 else if(argc == 4)
  printf("단어수는 %d \n 줄 수는 %d\n글자수는 %d 입니다 \n",h,m,n);
 else{
 }

}


10.문자열이 회문이면 1 아니면 0 을 출력하는 프로그램

#include <stdio.h>
#include <string.h>

int IsPalindrome(char* s);


void main()
{
 char kk[100] ={0};

 printf("*회문검사 프로그램* 문장을 입력하세요 : ");
 gets(kk);
 

 if(IsPalindrome(kk))
  printf("회문입니다.\n");
 else
  printf("회문이 아닙니다.\n");

}

int IsPalindrome(char* s)
{
 int i, len;

 len = strlen(s);


 for(i=0;i<len/2;i++)
 {
  if(s[i] != s[len-i-1])
   break;
 }
 if(i == len/2)
  return 1;
 else
  return 0;
}


11.EOF가 입력될때까지 문자를 입력받아 대소문자 구분없이 문자열 "the" 가 포함된 모든 단어를 출력하는 프로그램


#include <stdio.h>
#include <ctype.h>
#include <string.h>

int check( char* word , char* str)
{
 int len = strlen(word);
 int len2 = strlen(str);
 int i;

 for(i = 0; i<= len - len2 ; i++){
  if(strncmp(word+i,str,len2) == 0)
   return 1;
 }
 return 0;
}

void main()
{
 char word[256];

 while(scanf("%s",word) != EOF){
  if(check(word,"the"))
   printf("%s\n",word);
 }
}


12.EOF가 입력될 때까지 문자를 입력받아 대소문자 관계없이 't' 'h' 'e' 가 하나라도 포함된 단어들을 출력하는 프로그램

#include <stdio.h>
#include <ctype.h>

int check(char* word, char c);

void main()
{
 char word[256];

 while(scanf("%s",word) != EOF){
  if(check(word,'t') || check(word,'h')|| check(word,'e')){
   printf("%s\n",word);
  }
 }
}
int check(char* word, char c)
{
 while(*word != 0){
  if(tolower(*word) == tolower(c))
   return 1;
  word++;
  
 }
 return 0;
}


13.EOF가 입력될 때까지 문자를 입력받아 한번이라도 나타난 알파벳 대문자들을 입력된 순서대로 출력하는 프로그램

#include <stdio.h>
#include <ctype.h>


void main()
{
 int count[26] = {0};
 int c;
 int i;


 printf("문장을 입력하세요: ");
 while((c=getchar()) != EOF){
  if(isupper(c)){
   count[c-'A']++;
   if(count[c-'A'] ==1){
    putchar(c);}
  }
 }
}

14.영단어를 입력하면 첫문자는 대문자로 나머지 문자는 소문자로 바꾸어 출력하는 프로그램

#include <stdio.h>
#include <string.h>
#include <ctype.h>
 
char* Capitalize(char word[ ]);
 
 
void main()
{
 char str[100] ={0};
 
 Capitalize(str);
 
 printf("%s \n",str);
 
 
}
 
 
char* Capitalize(char word[])
{
 int i,j =0; 
 int len;
 char voca[100] = {0};
 
 
 printf("문자를 입력하시오 : ");
 gets(voca);
 
 len = strlen(voca);
 
 
 for(i = 0 ; i <= len; i++){
  if(!isspace(voca[i])){
   if(islower(voca[i])){
    word[j] = toupper(voca[i]); break;
   }
   else
    word[j] = voca[i]; break;
  }
 }
 j++;
 i++;
 for(;i<=len;i++){
  if(isupper(voca[i])){
   word[j] = tolower(voca[i]); 
   j++;
  }
  else{
   word[j] = voca[i];
   j++;
  }
 }
 
 
 
 return word;
}
