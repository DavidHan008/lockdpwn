# coding: utf-8

----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------



----------------------------------------------------------------




----------------------------------------------------------------
170714_금

# RViz의 Axis가 Loam과 똑같이 앞방향이 y, 우측방향이 x로 맞춰져 있고 변경이 불가능하다
    # 따라서 Loam의 좌표계를 회전하는게 아니라 다른 센서들의 좌표계를 Loam에 맞게 변경하는게 Rviz상에서 볼 때 더 편할것 같다










----------------------------------------------------------------
170705_수

# 차량 ROS 데이터들이 catkin_make가 안되서 보니까 eci_can for amd64가 깔려있지 않아서 제대로 메이크가 되지 않았다
  # 설치하고 make해보니깐 잘된다



# 모션플래너를 실행시킨다 (초록색선을 그려준다)

 # rosrun motion_planner motion_planner

	 # Jw Path 버튼을 누르면 rviz 안에서 초록색 라인이 그려진다
	 # 이 버튼은 LocalPlannerThread.cpp 안에서 fin.open("/home/dyros#vehicle/Documents/00_DATA/bag/map/0903map.txt") 코드를 읽고 실행되는듯하다


# Loam Velodyne을 실행시킨다 (rviz가 켜지면서 좌표축이 그려진다) (Fixed Frame은 보통 camera_init , velodyne 이었다)

	# roslaunch loam_velodyne loam_velodyne.launch

# bag파일을 실행시키면 rviz 안에서 차량이 돌아간다

	# rosbag play velodyne.bag








# 통합ui를 만들어야 하는듯









------------------------------------------------------------------
170703~

