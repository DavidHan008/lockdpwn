1. Vehicle CAN
	rosrun car_can car_can

2. Velodyne for 64ch
	1> Velodyne
	sudo route add 192.168.3.043 eth4
	cd ~/catkin_ws/src && rosrun velodyne_pointcloud gen_calibration.py 64db.xml
	roslaunch velodyne_pointcloud 32e_points.launch calibration:=/home/dyros-vehicle/catkin_ws/src/64db.yaml

	2> LOAM
	cd ~/catkin_ws/src/loam_velodyne-master && roslaunch loam_velodyne.launch

3. Localization
	rosrun localization localization

4. Hightmap
	rosrun velodyne_height_map heightmap_node


5. Suhan LOAM Velodyne
	1> Initial map generation
	roslaunch loam_velodyne loam_velodyne.launch
	1-2> After initialized
	rostopic pub -1 /loam_map_save std_msgs/String "filename.pcd" 
// filename could be changed

	2> Load initial map and match init pose
	edit loam_velo_global_test.launch (~/catkin_ws/src/loam_velodyne/launch)
	$ cd ~/catkin_ws/src/loam_velodyne/launch
	$ gedit loam_velo_global_test.launch //front_e
	
    <param name="map_file" type="string" value="init.pcd" /> //< init.pcd -> filename.pcd
	2-1> launch loam again
	roslaunch loam_velodyne loam_velo_global_test.launch 


(shutdown loam before launch)
	


	
	

	
