{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica{\*\falt Arial};}
{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv{\*\falt Arial};}{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f79\froman\fcharset238\fprq2 Times New Roman CE;}
{\f80\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f82\froman\fcharset161\fprq2 Times New Roman Greek;}{\f83\froman\fcharset162\fprq2 Times New Roman Tur;}{\f84\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f85\fswiss\fcharset238\fprq2 Arial CE;}
{\f86\fswiss\fcharset204\fprq2 Arial Cyr;}{\f88\fswiss\fcharset161\fprq2 Arial Greek;}{\f89\fswiss\fcharset162\fprq2 Arial Tur;}{\f90\fswiss\fcharset186\fprq2 Arial Baltic;}{\f91\fmodern\fcharset238\fprq1 Courier New CE;}
{\f92\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f94\fmodern\fcharset161\fprq1 Courier New Greek;}{\f95\fmodern\fcharset162\fprq1 Courier New Tur;}{\f96\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\adjustright \fs20 \snext0 Normal;}{\s1\sb240\nowidctlpar\adjustright \b\f9\ul \sbasedon0 \snext0 heading 1;}{\s2\sb120\nowidctlpar\adjustright \b\f9 
\sbasedon0 \snext0 heading 2;}{\s3\li360\nowidctlpar\adjustright \b \sbasedon0 \snext17 heading 3;}{\s4\li360\nowidctlpar\adjustright \ul \sbasedon0 \snext17 heading 4;}{\s5\li720\nowidctlpar\adjustright \b\fs20 \sbasedon0 \snext17 heading 5;}{
\s6\li720\nowidctlpar\adjustright \fs20\ul \sbasedon0 \snext17 heading 6;}{\s7\li720\nowidctlpar\adjustright \i\fs20 \sbasedon0 \snext17 heading 7;}{\s8\li720\nowidctlpar\adjustright \i\fs20 \sbasedon0 \snext17 heading 8;}{
\s9\li720\nowidctlpar\adjustright \i\fs20 \sbasedon0 \snext17 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \fs16\up6\lang1033 \sbasedon10 footnote reference;}{\s16\nowidctlpar\adjustright \fs20 \sbasedon0 \snext16 
footnote text;}{\s17\li720\nowidctlpar\adjustright \fs20 \sbasedon0 \snext17 Normal Indent;}{\s18\fi-240\li480\sb80\nowidctlpar\tx480\adjustright \f5 \sbasedon0 \snext18 nscba;}{\s19\fi-240\li240\sa20\nowidctlpar\adjustright \f5 \sbasedon0 \snext19 j;}{
\s20\li480\sa20\nowidctlpar\adjustright \f5 \sbasedon0 \snext20 ij;}{\s21\sb80\sa20\nowidctlpar\adjustright \f5 \sbasedon0 \snext21 btb;}{\s22\fi-240\li2400\sb20\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext22 ctcb;}{
\s23\fi-240\li480\sa40\nowidctlpar\tx480\adjustright \f5 \sbasedon0 \snext23 ns;}{\s24\sa120\nowidctlpar\adjustright \f5\fs28 \sbasedon0 \snext24 TT;}{\s25\fi-240\li2400\sa20\nowidctlpar\adjustright \f5 \sbasedon0 \snext25 crtj;}{
\s26\fi-240\li480\nowidctlpar\tx480\adjustright \f5 \sbasedon0 \snext26 nsca;}{\s27\sa20\nowidctlpar\adjustright \f5 \sbasedon0 \snext27 bt;}{\s28\li240\sb120\sa40\nowidctlpar\adjustright \f5 \sbasedon0 \snext28 Hf;}{
\s29\li240\sb120\sa40\nowidctlpar\adjustright \f5 \sbasedon0 \snext29 Hs;}{\s30\li480\sb120\sa40\nowidctlpar\adjustright \f5 \sbasedon0 \snext30 RT;}{\s31\fi-2160\li2160\sb240\sa80\nowidctlpar\tx2160\adjustright \f5 \sbasedon0 \snext31 c;}{
\s32\li2160\sa20\nowidctlpar\adjustright \f5 \sbasedon0 \snext32 ct;}{\s33\li240\sa20\nowidctlpar\adjustright \f5 \sbasedon0 \snext33 it;}{\s34\li480\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext34 nsct;}{
\s35\fi-160\li400\sb80\sa40\nowidctlpar\adjustright \f5 \sbasedon0 \snext35 nscb;}{\s36\fi-2640\li2880\sb120\sa40\nowidctlpar\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880\adjustright \f5 \sbasedon0 \snext36 HC2;}{
\s37\fi-2640\li2880\sb120\sa20\nowidctlpar\tx2880\adjustright \f5 \sbasedon0 \snext37 C2;}{\s38\fi-240\li2400\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext38 ctc;}{\s39\li2160\sb160\nowidctlpar\adjustright \f5 \sbasedon0 \snext39 crt;}{
\s40\li480\sb20\sa40\nowidctlpar\adjustright \f5 \sbasedon0 \snext40 or;}{\s41\fi-259\li360\sb40\sa40\nowidctlpar\tx360\adjustright \f11\fs20 \sbasedon0 \snext41 Ln1;}{\s42\li115\sb80\sa80\nowidctlpar\adjustright \f11\fs20 \sbasedon0 \snext0 *Intro;}{
\s43\li115\sb80\sa80\keepn\nowidctlpar\adjustright \b\f11 \sbasedon3 \snext42 *Title;}{\s44\fi-245\li360\sb80\nowidctlpar\adjustright \f11\fs20 \snext44 *Jl;}{\s45\li360\sb40\sa40\nowidctlpar\adjustright \f11\fs20 \snext0 Lp1;}{
\s46\fi-1800\li1915\sb60\sl-240\slmult0\nowidctlpar\tx1915\adjustright \f11\fs20 \sbasedon0 \snext46 Tph;}{\s47\li115\sb120\sa80\nowidctlpar\adjustright \b\f11\fs20 \snext41 Proch;}{\*\cs48 \additive \super \sbasedon10 endnote reference;}{
\s49\sa120\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext49 Body Text;}{\s50\li360\sa120\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext50 Body Text 2;}{\s51\nowidctlpar\adjustright \f1\fs16 \sbasedon0 \snext51 Popup Topic;}{
\s52\fi-1080\li1440\sl240\slmult0\widctlpar\tx1440\adjustright \f1\fs20 \sbasedon0 \snext52 Shortcut Text;}{\s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 \sbasedon0 \snext53 Topic Text;}{\s54\sa120\sl240\slmult0
\keepn\widctlpar\adjustright \b\f1\cf2 \sbasedon0 \snext53 Topic Title;}{\*\cs55 \additive \b \sbasedon10 Strong;}{\*\cs56 \additive \i \sbasedon10 Emphasis;}}{\*\listtable{\list\listtemplateid-1492475536\listsimple{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li720\jclisttab\tx720 }{\listname ;}\listid39131486}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid62946656}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid506486240}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid698121750}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid739332584}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid855535571}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers
;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid871959593}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 
\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1063597292}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360
\jclisttab\tx360 }{\listname ;}\listid1078089401}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 
}{\listname ;}\listid1355577225}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1562060642}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1587417802}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1787383288}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1897357853}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1919090961}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1944338247}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid2004699898}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid2068870131}}
{\*\listoverridetable{\listoverride\listid1562060642\listoverridecount0\ls1}{\listoverride\listid855535571\listoverridecount0\ls2}{\listoverride\listid1355577225\listoverridecount0\ls3}{\listoverride\listid739332584\listoverridecount0\ls4}
{\listoverride\listid1944338247\listoverridecount0\ls5}{\listoverride\listid2004699898\listoverridecount0\ls6}{\listoverride\listid698121750\listoverridecount0\ls7}{\listoverride\listid1897357853\listoverridecount0\ls8}{\listoverride\listid1063597292
\listoverridecount0\ls9}{\listoverride\listid39131486\listoverridecount0\ls10}{\listoverride\listid1587417802\listoverridecount0\ls11}{\listoverride\listid2068870131\listoverridecount0\ls12}{\listoverride\listid62946656\listoverridecount0\ls13}
{\listoverride\listid506486240\listoverridecount0\ls14}{\listoverride\listid871959593\listoverridecount0\ls15}{\listoverride\listid1078089401\listoverridecount0\ls16}{\listoverride\listid1787383288\listoverridecount0\ls17}{\listoverride\listid1919090961
\listoverridecount0\ls18}}{\info{\author Gregory A. Wolking}{\operator Gregory A. Wolking}{\creatim\yr2000\mo12\dy4\hr14\min29}{\revtim\yr2002\mo2\dy2\hr21\min10}{\version17}{\edmins245}{\nofpages21}{\nofwords5716}{\nofchars32585}
{\*\company HoseHead Software}{\nofcharsws40016}{\vern113}}\widowctrl\ftnbj\aenddoc\hyphcaps0\viewkind4\viewscale100 \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar\adjustright \fs20 {\cs15\b\fs16\up6 #}{ HIDD_CONTEXTEDIT_DIALOG}}${\footnote \pard\plain 
\s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 $}{ Introduction}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ introduction}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ A:00}}}{\fs16 
 }{ContextEdit Help
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {
ContextEdit gives you control over the context menu commands (i.e., the commands that appear when you right-click on an object in Windows Explorer) available in your system. Windows Explorer gives you some control over this via its }{\b 
View | Options | File Types}{ command. ContextEdit lets you do things that Windows Explorer does not, including:
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls3\adjustright {
Disabling shell commands }{\uldb without deleting them entirely}{\v method}{.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls3\adjustright {
Enabling and disabling }{\uldb Context Menu Handlers}{\v handlerinfo}{.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls3\adjustright {
Edit, create, and/or remove commands that are associated directly with a file extension instead of a named file type.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls3\adjustright {
Repair "broken" file associations in which an extension is linked to a master file type that does not exist.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls3\adjustright {
Overcoming certain bugs in Windows Explorer when editing commands via }{\b View | Folder Options | File Types}{
\par }\pard \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright {Since this program lets you modify aspects of your system's behavior that Windows normally does not, it's a good idea to read the }{\uldb About File Associations}{\v aboutassociations}{
 topic to get a better understanding of what information this program exposes to you and why.
\par ContextEdit's main dialog is divided into three sections:
\par }{\uldb The File Type list}{\v typelist}{
\par }{\uldb The Shell Commands list}{\v commandlist}{
\par }{\uldb The Context Menu Handers list}{\v handlerlist}{
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ aboutassociations}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 $}{ About File Associations}}}{\cs15\fs16\up6 K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ Technical information}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ A:01}}}{
 About File Associations
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {
Windows uses file associations to determine what actions can be taken with files on your system, based on their extensions. This information is stored in the HKEY_CLASSES_ROOT section of the Registry. There are basically two types of associations: }{\b 
Simple}{ and }{\b Compound}{.
\par A simple association associates commands directly with a specific file extension. This is the way most file associations were implemented in 16-bit versions of Windows, and 32-bit W
indows maintains this mechanism primarily for compatibility with 16-bit applications. These associations use a single }{\b extension key}{
 in the registry (that is, any subkey of HKEY_CLASSES_ROOT whose name begins with a ".'), and the associated commands are defined using subkeys of that extension key.
\par A Compound association usually employs at least two registry keys: a }{\b master file type}{ key (any subkey of HKEY_CLASSES_ROOT whose name does }{\i not}{ begin with a ".") along with one or more }{\b extension keys}{. In this case, 
the default string value assigned to an extension key contains the name of a master file type key, and the commands themselves are defined using subkeys of the master file type key. This allows Windows to associate multiple file extensions with a given fi
le type and command set.
\par This brings us to perhaps the most significant difference between ContextEdit and Windows Explorer. Explorer's }{\b View | Folder Options | File Types}{ command only shows information for compound associations, while ContextEdit shows you both simple }{
\i and}{ compound associations. This is important because it is possible to have commands defined both for the file extension itself as well as for the master file type with which it is associated. When this happens, the master file type takes prece
dence, so that any commands associated directly with the file extension become unavailable.
\par To handle this particular situation, ContextEdit provides the }{\b Move to master file type}{ button. This button will be enabled whenever the current file type is an exte
nsion key that has commands defined but is linked to a master file type. Clicking the button will move those commands from the extension key to the master file type key, then select the master file type automatically so that you can review the results, th
en decide whether or not to remove any duplicated or obsolete commands.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ typelist}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 $}{ Using the File Type list}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ file types}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ A:02}}}{ The File Type list
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {
The file type list occupies the left side of ContextEdit's main window. It shows all of the extensions and master file types defined in your system. These are listed in alphabetical order, so }{\b extension keys}{
 (whose names begin with a ".") will usually be shown first, followed by }{\b master file type keys}{. To locate an extension or master file type quickly, you can use the list box's }{\uldb progressive search}{\v progsearch}{ feature.
\par When you select an extension or file type in the list, ContextEdit retrieves the appropriate information from the Registry and fills in the }{\b Extensions }{drop list, the }{\b Shell Command }{list, and the }{\b Context Menu Handler}{ list accordingly.

\par The }{\b Extensions}{ drop list is for information only. When you have a master file type selecte
d, this list will show all of the extensions that are associated with that master file type. Note that some master file types on your system may not be associated with any extensions at all, in which case the Extensions drop list will be disabled because 
it is completely empty. These master file types are used internally by applications installed on your system and will rarely have any shell commands defined.
\par The }{\b Find master file type}{ button will be enabled whenever an extension key is selected and that ext
ension is linked to a master file type. Clicking the button will locate and select the associated master file type in the list. You can also do this by double-clicking an extension key in the list.
\par Since it is possible for other applications to alter your file associations while ContextEdit is running, the }{\b Refresh}{
 button forces ContextEdit to re-read all file association information from the Registry, ensuring that you're working with an up-to-date "picture" of your system.
\par Some extensions and file types (s
uch as the .EXE extension for executable files) are reserved for use by the system itself and must not be altered. ContextEdit will show these extensions and file types in its list, but if you select such a "system file type", all other controls will auto
matically be disabled to prevent you from altering this information.
\par There are other entries in the list that have special meanings:
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li360\sa120\sl240\slmult0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b 
All files, regardless of extension}{. As its name implies, this master file type is used to define commands and handlers fo
r all files, system wide, regardless of their extensions. That is, when you right-click on a file whose extension has an explicit association, any commands defined here will be appear }{\i in addition to}{
 any commands defined for that file's specific type.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li360\sa120\sl240\slmult0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b Al
l unassociated extensions}{
. Again, as its name implies, this master "Unknown" file type is a "catch-all" for files whose extensions are not listed in the HKEY_CLASSES_ROOT section of the Registry. Note that if you define commands for this file type and the 
"all files" type, then when you right-click on a file that has no association, }{\i both}{
 of those commands will appear on the menu. If you haven't set unique menu text for each command, you won't be able to tell which command is which. However, if you set a def
ault command for both the "Unknown" and "All Files" types, the "Unknown" type's default command will take precedence.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li360\sa120\sl240\slmult0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b Drive:}{
 Represents disk drive icons.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li360\sa120\sl240\slmult0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b Folder:}{
 Represents both physical folders on disk and logical "folder-like objects" such as "My Computer", "Network Neighborhood", etc.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li360\sa120\sl240\slmult0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b File Folder:}
{ Applies exclusively to physical folders on disk.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li360\sa120\sl240\slmult0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b 
The "dot* key:}{ This is an extension key named with a single ".". While some applications may use this key for their own purposes, it also serves to identify files whose names have no extension at all.
\par }\pard \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright {
Finally, ContextEdit is able to repair a "broken" compound association. If you select an extension key in the list that is linked to a master file type that does not exist, ContextEdit presents a }{\uldb warning dialog}{\v HIDD_WARN_BROKEN}{
 in which you may choose which action, if any, to take in order to resolve the problem.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ commandlist}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 $}{ The Shell Command list}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ shell commands}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ A:03}}}{ The Shell Command list
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {This list control shows all of the shell commands defi
ned for the current file type. The checkboxes beside each command show whether it is enabled or disabled. To enable or disable a command, either click its checkbox with the mouse, or select that command and press the spacebar. The change usually takes eff
e
ct immediately so you can work back and forth between Windows Explorer and ContextEdit to verify that your actions have the desired results. However, in some cases you may have to close and re-open Explorer before it will pick up the change; certain file 
associations are "pre-parsed" as Explorer launches instead of being read "on the fly" when you right-click an object.
\par To the left of the checkboxes, the word }{\b DEFAULT}{ indicates which command (if any) is the current default. The default command is the command
 that Explorer will execute when you double-click a file of this type, or when you launch a file of that type using the START command from the DOS prompt, a .BAT file, or script. To set or change the default command, select the desired command and either 
click the }{\b Set Default}{ button or press }{\b Alt+S}{.
\par Windows does not require you to set an explicit default command. If there is only one command defined (or enabled), it is automatically the default command. If there is a command with the internal name "open", Wi
ndows will use that command as the default unless you set a different default command explicitly. If there is no command named "open" and there is no default assigned, then Explorer's action is unpredictable when you double-click a file of that type, and 
t
he START command will be unable to launch files of that type. Therefore, if you have more than one command defined and none of them uses the internal name "open", it's a good idea to set the default command explicitly to ensure that Explorer behaves consi
stently.
\par Note that there is no explicit "clear default" command provided. However, if for some reason you do wish to leave no command set explicitly as the default, simply disable the current default command, acknowledge the resulting warning message, then 
re-enable that command.
\par The }{\b Internal Name}{ column shows the name of the Registry key which contains this command. The }{\b Menu Text}{ field shows the menu text, if any, that's defined for this command. If specified, this determines how that command will appear in
 the context menu. The ampersand "&" character has special meaning: the character that follows the ampersand character will be underlined in the menu, and thus serve as the "activation letter" for that command.
\par Note that Windows does not require menu text to be defined explicitly. In particular, Windows recognizes certain internal names automatically and will supply appropriate menu text for those commands. These include:
\par }\trowd \trqc\trgaph108\trrh-240\trleft612\trkeep\trhdr \clvertalt\cltxlrtb \cellx2574\clvertalt\cltxlrtb \cellx5436\pard \s53\sa120\sl240\slmult0\widctlpar\intbl\adjustright {\b\ul Internal Name\cell Default Menu Text\cell }\pard\plain 
\widctlpar\intbl\adjustright \fs20 {\b\ul \row }\trowd \trqc\trgaph108\trrh-240\trleft612\trkeep\trhdr \clvertalt\cltxlrtb \cellx2574\clvertalt\cltxlrtb \cellx5436\pard\plain \s53\sa120\sl240\slmult0\widctlpar\intbl\adjustright \f1\fs20 {open\cell &Open
\cell }\pard\plain \widctlpar\intbl\adjustright \fs20 {\row }\pard\plain \s53\sa120\sl240\slmult0\widctlpar\intbl\adjustright \f1\fs20 {openas\cell Open With...\cell }\pard\plain \widctlpar\intbl\adjustright \fs20 {\row }\pard\plain 
\s53\sa120\sl240\slmult0\widctlpar\intbl\adjustright \f1\fs20 {print\cell &Print\cell }\pard\plain \widctlpar\intbl\adjustright \fs20 {\row }\trowd \trqc\trgaph108\trrh-240\trleft612\trkeep\trhdr \clvertalt\cltxlrtb \cellx2574\clvertalt\cltxlrtb 
\cellx5436\pard\plain \s53\sa120\sl240\slmult0\widctlpar\intbl\adjustright \f1\fs20 {printto\cell Print to...\cell }\pard\plain \widctlpar\intbl\adjustright \fs20 {\row }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {
\par When such internal names have no menu text assigned, ContextEdit will display "<System Default>" in the Menu Text column. Otherwise, it will show "<Undefined>". In the latter case, Windows will u
se the command's internal name to provide the text for the context menu. If the internal name begins with the "&" character, it will }{\i not}{ specify the command's activation letter, it will appear literally as part of the command's name.
\par The }{\b New}{ button allows you to create a new command. After prompting you for an internal name for your new command, ContextEdit will present the }{\uldb Command Editor Dialog}{\v HIDD_COMMAND_DLG}{
 so you can provide the menu text, command line, and other information. There is one exception: If
 the current file type is an extension key that is linked to a master file type, adding commands to the extension key will have no effect because the master file type takes precedence. In this situation, ContextEdit will present an appropriate warning mes
sage and offer to locate and select the associated master file type key for you, so you may then add your new command to the master file type instead.
\par Similarly, the }{\b Edit}{ button allows you to modify an existing command. You can also edit a command by selecting it in the list and pressing either }{\b Enter}{ or }{\b Alt+E}{.
\par The }{\b Delete}{ button deletes the selected command entirely. You can also delete a command by selecting it in the list and pressing }{\b Del}{. Since the operation cannot be undone (once you delete a command, it is }{\i gone}{
), ContextEdit will always ask you for confirmation first.
\par The }{\b Move to master file type}{ button will only be enabled when you have an extension key selected, that extension key has commands defined, and is linked to a master file type. Since the mast
er file type takes precedence, the commands shown for the extension key will never appear in Explorer's context menus. Clicking this button will move those commands to the associated master file type to make them available in Explorer, then locate and sel
ect that master file type so that you can review the results.
\par If the association is "broken", meaning that the extension key refers to a master file type that does not exist, ContextEdit will present a }{\uldb warning dialog}{\v HIDD_MOVE_ERROR}{ in which you may choose t
o either remove the reference to the non-existent master file type, select an existing master file type for this extension, or cancel the move operation entirely. If you choose a master file type, ContextEdit will establish that link and move the commands
 accordingly.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ handlerlist}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 $}{ The Context Menu Handler list}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ context menu handlers}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ A:04}}}{
 The Context Menu handler list.
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {This list shows the Context Menu Handlers that are associated with the curre
nt file type. Context Menu Handlers also provide commands on Explorer's context menus, but in a much more sophisticated manner than simple Shell Commands ... click }{\uldb here}{\v handlerinfo}{ for details.
\par The list contains three columns.
\par The }{\b Friendly Name}{ column shows
 the text identifier stored in the registry for that handler. This name isn't always that "friendly", but it will usually give you an idea as to either what function the handler performs, or which program implements that handler. The checkbox to the left 
of the Friendly Name shows whether or not a handler is enabled. To toggle a handler's status, either click the checkbox with the mouse, or select the handler in the list and press the spacebar.
\par The }{\b Internal Name}{ column shows the name of the Registry key under which the handler is registered. Again, this may provide a clue as to what the handler does.
\par The }{\b Module Name}{ field shows the name of the executable (usually a .DLL) file which implements that handler. If the other two fields don't help you figure out what the handler does, you can use the Windows }{\b Find}{
 command to locate that file, view its properties screen, then (in most cases) click the "Version" tab to view more detailed information about that file.
\par Because of the way that context menu handlers integra
te with Windows Explorer, ContextEdit cannot tell you which menu commands a given handler may provide. Therefore, your action is limited to disabling or enabling a handler by clearing or setting its checkbox. Enabling or disabling a handler takes effect i
mmediately, so you can work back and forth between Context Edit and Windows Explorer to see if your action has the desired effect.
\par }{\b Technical Note:}{ When ContextEdit disables a Context Menu Handler, it does }{\i not}{ affect the associated code module in any way. Th
e code module that implements a context menu handler may also provide other system functions. Therefore, ContextEdit simply "disconnects" that handler from Windows Explorer, so that Explorer no longer tries to load that handler. Any other system functions
 that the handler's code module may provide will remain unchanged.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ handlerinfo}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 $}{ About Context Menu Handlers}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ Technical information}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ A:05}}}{
 About Context Menu Handlers
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {A Context Menu Handler is a special type of program that provides commands on Exp
lorer's context menus. This mechanism is much more sophisticated than "standard" Shell Commands which you can access via Explorer's }{\b View | Folder Options | File Types}{
 command. Standard shell commands are little more than simple instructions, telling Explorer what command line to execute in order to carry out a given command.
\par To put it another way, standard shell commands are "dumb". If you define a shell command for a given file type, that command will always appear when you right-click on a file (or object) of that type. 
\par By comparison, context menu handlers are "smart". A context menu handler is a special type of program, called a "shell extension", that literally becomes a part of Windows Explorer. Whenever you right-click on an object (or group of select
ed objects), you initiate a three-step process.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls9\adjustright {\b Step 1:}{
 Explorer loads the context menu handlers associated with any and all of the objects in your selection. It queries each handler in turn, passing information about what your selection includes. Each 
handler may then use that information to query Explorer and/or the system further, then it must return an answer to Explorer. To grossly oversimplify, the handler answers either "Yes, I may have commands for this situation" or "No, I have nothing to contr
ibute here".
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls9\adjustright {\b Step 2: }{
While Explorer is constructing the context menu, it again queries each handler that answered "Yes" in Step 1. Each handler may then use the information it gathered during step 1 to add its commands (if any) to the menu.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls9\adjustright {\b Step 3:}{ Ex
plorer presents the context menu to the user. If the user selects a command provided by a handler, Explorer calls that handler a third time, telling it which command the user selected. The hander is then responsible for doing whatever is necessary to carr
y out that command.
\par }\pard \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright {
Since a context menu handler is designed specifically to integrate with Windows Explorer, there is no reliable way for ContextEdit to query a handler and tell you which commands it may provide. The best it can do is let you enable and di
sable handlers so that you can take a trial-and-error approach. That is, you can select one or more objects in Explorer and right-click your selection to see what commands are present, then press }{\b Esc}{
 to cancel the menu. You may then switch back to ContextEdit and enable or disable a handler, then return to Explorer and right-click your selection again to see if your action had the desired effect.
\par }{\b USEFUL THINGS TO NOTE:
\par }{Disabling a context may handler may have no immediate effect on the appearance of your co
ntext menus. Unlike shell commands, most context menu handlers are "intelligent" and will only present their commands when circumstances are appropriate. The possibilities are numerous, including (and certainly not limited to) the following:
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls7\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls7\adjustright {A handler m
ay present no commands at all unless your selection resides in a particular folder.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls7\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls7\adjustright {
A handler may provide different commands (or no commands at all) depending on the nature of your selection, such as whether it's a single file, multiple files of differe
nt types, multiple files of the same type, a single folder, multiple folders, a mixture of files and folders, etc.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls7\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls7\adjustright {
A handler may provide different commands (or no commands at all) for a given master file type based on what extension the current file has
, what data a file contains, even other aspects of the system such as the current system time or whether or not there's a diskette present in your floppy drive.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls6\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls6\adjustright {
Some handlers may be assigned to more than one file type, including the special "Drive", "Folder", "File Folder", and "All Files" types. A good example of this is the popular WinZip utility. If you wish to completely disable WinZip's context menu commands
, you must disable it under the "All Files", "Folder", }{\i and}{ "File Folder" file types.
\par }\pard \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright {Finally, there's no surefire way to tell from the appearance of a context menu whether any given command in that menu is a simple shell command or a command provided by a c
ontext menu handler. You'll just have to experiment and find out.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ HIDD_COMMAND_DLG}}${\footnote \pard\plain \s16\nowidctlpar\adjustright 
\fs20 {\cs15\fs16\up6 $}{ The Command Editor dialog}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ Editing commands}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ A:06}}}{
 The Command Editor dialog
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {This dialog allows you to create new Shell Commands and edit existing ones. The title bar shows the internal name of the command you are creating or editing.
\par Fill in or edit the fields as desired (or required). To save your changes, either click the }{\b OK}{ button or press }{\b Enter}{. If any required information is missing, ContextEdit will present 
an error message and put the cursor in the field that has the problem. To discard any changes, either click the }{\b Cancel}{ button or press }{\b Esc}{. Changes that you make in this dialog do not take effect unless and until you click }{\b OK}{
 and return to the main dialog.
\par The }{\b Menu Text}{
 field lets you determine what text will appear in the context menu for your command. This information is not absolutely required and can be left blank if you wish. If there is no menu text specified, and Windows will either use the command's
 internal name for the menu text or provide default text for certain internal command names (as shown under the }{\uldb Shell Command List}{\v commandlist}{
 topic). However, defining this text leaves no doubt as to how your commands will appear in the menu.
\par When typing i
n your menu text, note that the ampersand (&) character has special meaning. The character that immediately follows the ampersand will be underlined in the menu, and thus serve as the "activation letter" for that command. If you wish to have the ampersand
 
character appear literally as part of your command text, list it twice in direct succession. So, for example, if you define your menu text as "&Remove", the letter "R" will be underscored and, when the menu appears, you may type the letter "R" to activate
 that command. If you define the text as "&Open && Print", it will appear as "Open & Print" with the "O" underlined.
\par If a context menu has more than one command with the same activation letter, typing that letter will not execute a command automatically. Rather, it will cycle your selection through all commands that have that letter, and you must press }{\b Enter}{
 to execute the selected command.
\par The }{\b Command Line}{ field is required. It contains the command line that Explorer will execute when you select that command. You may either type the command line manually, or you may use the }{\b Browse}{
 button to select a program file and let Context Edit build a standard command line for you, which you may then edit as needed. Note the following:
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {\b 
The "%1" argument has special meaning.}{
 It represents the name of the file on which your command will act. Windows supplies this file name automatically, even if the "%1" parameter is not specified. However, specifying "%1" explicitly allows you to determine exactly where the filename w
ill appear in the line. This is especially important when you must provide other command line arguments or "switches". Some programs are sensitive as to the order in which the various arguments and switches appear.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {\b Quotes:}{
 Because of Windows' support fo
r long filenames, some applications may require the path to a file (whether the name of the program file itself or the name of a document file to be passed to that program) to be enclosed in quotes. Otherwise, spaces (or other special characters) in the f
ilename may cause Windows to interpret that name as two or more separate arguments. When you use the }{\b Browse}{
 button to choose a program file, ContextEdit automatically puts quotes around both the name of the program file and the "%1" filename argument.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {\b Ex
pand Environment Variables:}{ By checking this box, you can include the contents of environment variables ("e-vars") in your command line using the }{\f2 %variable name%}{ syntax. Read the }{\uldb Using Environment Variables}{\v evars}{
 topic for more information about this feature. If this checkbox is disabled, your system does not support this feature.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {
If you attempt to apply this setting and your system does not support it, Context Edit will present an appropriate error message and
 disable the checkbox for the remainder of the current session. If an existing command has this box checked, then your system does support this feature. If that command line contains any %variable name% references, clearing the checkbox without editing th
e command line accordingly will cause the command to stop working.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {
Because of the myriad ways in which a command line can be defined, ContextEdit does not attempt to determine whether or not the command line you provide actually works. It is up to you to
 test your command in Windows Explorer to verify that it behaves as you expect. If it doesn\rquote t, it is up to you to figure out why, then edit your command line to resolve the problem.
\par }\pard \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright {In the }{\b Dynamic Data Exchange}{ section, the }{\b Use DDE}{ checkbox determines whet
her or not Explorer will use Dynamic Data Exchange to carry out your command. When this box is checked, Explorer uses a special mechanism to carry out your command. Instead of simply launching the program and passing arguments on the command line, Explore
r
 communicates directly with the target program, which must already be running. If the program is not already running, Explorer must be able to launch it before it can issue the DDE command. If Explorer is unable to establish this DDE "conversation", the c
ommand will fail. 
\par If the }{\b Use DDE}{ box is not checked, the remaining DDE fields have no effect and will be disabled. However, as long as you do not switch to a different file type, ContextEdit will retain the contents of the DDE fields (see below) when you clear the }
{\b Use DDE}{ checkbox. This allows you to test your commands by working back and forth between Context Edit and Windows Explorer, turning DDE on and off, without having to re-enter all of the DDE information every time. Once you switch to a different f
ile type, ContextEdit will delete and discard the DDE information for any commands that have DDE disabled.
\par }{\b IMPORTANT NOTE:}{ Using DDE requires detailed knowledge about the program that will carry out your command. If you're creating a new command, you shoul
d leave this box unchecked unless you know exactly what DDE information the target program requires. Most importantly, }{\b when editing an existing command that uses DDE, you should not alter }{\b\i any}{\b  of the DDE information unless you know }{\b\i 
exactly}{\b  what you are doing.}{
\par The following fields only have an effect when the }{\b Use DDE}{ box is checked:
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls5\adjustright {The }{\b 
DDE Message}{ field is required (all others are optional). It contains the specific DDE string that Explorer sends to the target program in order to carry out your command. The exact syntax of this field depends on the target program.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls5\adjustright {The }{\b 
Application}{ field is optional. It specifies the internal name of the program that Explorer uses to establish a DDE "conversation" with that program. If this field is left blank, Windows uses the base name of the executable file specified in the }{\b 
Command Line}{ field.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls5\adjustright {The }{\b 
Application Not Running}{ field is also optional. It specifies the command line used to launch the target program if it is not already running. If omitted, Windows uses the contents of the }{\b Command Line}{ field to launch the program.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls5\adjustright {The }{\b Topic}{
 field is optional, and specifies the name of the "topic" that Explorer will use to establish its DDE conversation with the target program. If omitted, Windows uses the "system" topic.
\par }\pard \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright {\b TECHNICAL NOTE:}{ ContextEdit can be used to overcome a bug in Windows Explorer. Specifically, if you edit DDE information for any of the optional fields via }{\b View | Options | File Types}
{ and accidentally type in a DDE value that you don\rquote t need, there's no way to get rid of that information except by deleting the command entirely. That is, you can delete all of the text from a DDE field, click }{\b OK}{
, and Explorer won't complain, but it won't delete the information, either! It'll still be there the next time you edit that command. By comparison, if you blank any of the optional DDE fields, Cont
extEdit will indeed remove that information entirely, and thus may be used to repair DDE commands that were "broken" because of this bug in Explorer.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ progsearch}}}{ Using Progressive Search in the File Type list
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {The file type list box lets you search for 
list items by typing their names. The way this search behaves depends on how quickly you type. If you type a single letter or symbol, the list box will jump to the first item whose name begins with the character you typed. If your selection does not chang
e, there is no item whose name begins with that character.
\par The search wraps around when it reaches the end of the list, so it will always search the entire list for you. For example, if your current selection begins with "Z", typing an "A" will jump you to 
the first item that begins with "A" (or "a"; the search feature is not case-sensitive).
\par If you type several characters in fairly rapid succession, the list box searches progressively, attempting to match as many of the characters you typed as possible. For
 example, if you type "WORD", the list box will locate the first list item that begins with "WORD". If there are no items that begin with "WORD", it will find the closest item that begins with "WOR". If there are no items that begin with "WOR", it will fi
nd the closest item that begins with "WO", and so on.
\par If you pause for more than about half a second while typing a name, the progressive search feature will reset, so it will search for the next character you type as the first letter of a list item.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ method}}}{ How ContextEdit handles Shell Command information
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {
When you disable a shell command, ContextEdit does not delete the information for that command, neither does it use any external files to store the information for disabled commands. Instead, ContextE
dit stores the information for disabled commands directly in the Registry, so it will always be available even if you have to remove and/or reinstall ContextEdit.
\par The method used is based on the way that commands are defined in the HKEY_CLASSES_ROOT sectio
n of the Registry. Commands for a given file type are defined under that file type's key using a subkey named "shell". Each subkey under "shell" defines one command, and the name of the subkey is that command's internal name. For example, the "open" comma
nd for the "txtfile" file type would be stored under the following key:
\par HKEY_CLASSES_ROOT\\txtfile\\shell\\open
\par When you disable a command, ContextEdit simply moves that command's subkey to a key named "-shell" instead of "shell". Thus, if you disable the above command, ContextEdit moves it to a key named:
\par HKEY_CLASSES_ROOT\\txtfile\\-shell\\open
\par The "-shell" subkey name has no special meaning to Windows itself, so Windows will neither use nor alter the information it contains and, unless you deliberately remove t
hat information from the Registry, ContextEdit will always be able to restore any command that it disables.
\par Note that it's possible to have both enabled and disabled shell commands with the same internal name. For example, you may disable the "open" comman
d for a given file type, then later reinstall the application that uses that file type, which then creates a new "open" command. When you view that file type in ContextEdit, you will see both commands, one enabled, the other disabled. If you enable (or di
sable) one of them, ContextEdit resolves the name conflict by appending a numeric suffix to that command's internal name. Thus, you may have:
\par (Enabled): HKEY_CLASSES_ROOT\\txtfile\\shell\\open
\par (Disabled): HKEY_CLASSES_ROOT\\txtfile\\-shell\\open
\par If you enable the disabled "open" command, you end up with:
\par (Enabled): HKEY_CLASSES_ROOT\\txtfile\\shell\\open
\par (Enabled): HKEY_CLASSES_ROOT\\txtfile\\shell\\open0
\par Of course, you can always edit the command to view its details and, if you have duplicated commands, you can simply delete the duplicates.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ HIDD_WARN_BROKEN}}}{ Warning: Broken Association
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {This dialog appears when you select an extension key that is linked to a master file type which does not exist. This
 is not necessarily a critical error as far as the system is concerned, but it is an error nonetheless, so ContextEdit gives you an opportunity to repair it.
\par The options are:
\par }\pard \s53\sa120\sl240\slmult0\widctlpar\adjustright {\b Remove the reference to the nonexistent master file type.
\par }\pard \s53\li720\sa120\sl240\slmult0\widctlpar\adjustright {This makes this file ty
pe a "simple" association -- an extension key that stands by itself and is not linked to any master file type. If there are any shell commands defined for this extension, this should make them reappear on the context menu for files with this extension.

\par }\pard \s53\sa120\sl240\slmult0\widctlpar\adjustright {\b Select an existing master file type with which to link this extension.
\par }\pard \s53\li720\sa120\sl240\slmult0\widctlpar\adjustright {This converts the file type to a valid "compound" association. When you choose this option, ContextEdit will present a list of the Master File Types available on your system from which you
 can either choose the desired file type, or cancel the operation. You should select the Master File Type carefully; once you establish this link, ContextEdit cannot change it back again. (Note: PC Magazine's "Freedom Of Association" utility will allow yo
u to move extensions from one master file type to another.)
\par If there are any shell commands registered under this extension key, they will not appear on your context menus because the master file type takes precedence. However, once you have linked the extension key to a valid master file type, you can use the }{
\b Move to master file type}{ button to make those commands available.
\par }\pard \s53\sa120\sl240\slmult0\widctlpar\adjustright {\b Delete this extension key entirely}{.
\par }\pard \s53\li720\sa120\sl240\slmult0\widctlpar\adjustright {This removes }{\i all}{ association data from the Registry for this extension. This operation cannot be un
done, so you should only choose this option when you know for a fact that your system does not have any applications installed that use this particular extension.
\par If this extension key has any context menu handlers attached to it, the references to those handlers will be removed as well. However, the handlers themselves will }{\i not}{
 be removed, so they will continue to function for any other file types or extensions to which they are attached.
\par }\pard \s53\sa120\sl240\slmult0\widctlpar\adjustright {\b Take no action, but continue to warn me about this error.
\par }\pard \s53\li720\sa120\sl240\slmult0\widctlpar\adjustright {ContextEdi
t will not change anything in the Registry, but will continue to present this dialog whenever you select a "broken" extension key in the file type list. This option is the default if you dismiss this dialog by pressing }{\b Esc}{.
\par }\pard \s53\sa120\sl240\slmult0\widctlpar\adjustright {\b Take no action and don't warn me about this type of error for the remainder of this session.
\par }\pard \s53\li720\sa120\sl240\slmult0\widctlpar\adjustright {
ContextEdit will not change anything in the Registry, and will stop presenting this warning message until you exit and re-launch the program. Since the warning won't be presented, you will not be
 able to repair this type of error for the remainder of the session, with exactly one exception. If a "broken" extension key has shell commands defined, the }{\b Move to master file type}{
 button will still be enabled. If you execute that command, ContextEdit will see that the association is broken, allow you to choose a valid master file type, link the extension key to that master file type, then move the commands accordingly.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ HIDD_MOVE_ERROR}}}{ Error Moving Commands
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {This dialog appears when you click the }{\b Move to master file type}{
 button, but the current extension key is linked to a master file type that does not exist. To repair this problem, you have two options available. Either select an option and click }{\b OK}{ (or press }{\b Enter}{), or click }{\b Cancel}{ (or press }{\b 
Esc}{) to abandon the operation.
\par }\pard \s53\sa120\sl240\slmult0\widctlpar\adjustright {\b Delete the reference to the non-existent master file type}{.
\par }\pard \s53\li360\sa120\sl240\slmult0\widctlpar\adjustright {Choosing this option makes the extension key "stand alone", so it becomes a "simple" association that is not linked to any master file type at all. Shell commands regist
ered under this key cannot be moved, but should reappear on the context menu for files with this extension.
\par }\pard \s53\sa120\sl240\slmult0\widctlpar\adjustright {\b Choose an existing master file type with which to associate this extension.}{
\par }\pard \s53\li360\sa120\sl240\slmult0\widctlpar\adjustright {If you choose this option, ContextEdit will present a list of the master file types available on your system. Either choose a file type from the list and click }{\b OK}{ (or press }{\b Enter}{
), or click }{\b Cancel}{ (or press }{\b Esc}{) to abandon the entire operation.
\par Once you choose a valid master file type, Context Edit will link the extension key to that file type, move the shell commands from the extension key to that master file type, then select the master file type so that you can review the results.
\par You should choose the master file type carefully -- once you establish the link between this ex
tension and a master file type, ContextEdit cannot change it again. (Note: You can use the PC Magazine Utility "Freedom Of Association" to change extensions from one tile type to another.)
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ HIDD_CHOOSE_TYPE}}}{ Choose Master File Type
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {This dialog is presen
ted when ContextEdit is attempting to repair a broken association. The list shows all of the master file types defined on your system. Choose a file type from the list (if you know the name of the type you want, you can find it quickly using the list's }{
\uldb progressive search}{\v progsearch}{ feature), then either click }{\b OK}{ (or press }{\b Enter}{) to proceed, or click }{\b Cancel}{ (or press }{\b Esc}{) to abandon the operation.
\par Once you select a file type from this list and click }{\b OK}{, ContextEdit will link the current extension key with that master file type and }{\i cannot}{ change this link again. Therefore, }{\b you should choose the master file type carefully}{.
\par However, if you choose the wrong file type, you can use PC Magazine's "Freedom Of Association" utility to remedy the error.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ HIDD_CMD_NAME}}}{ Select New Command Name
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {This dialog appears when you click the }{\b New}{
 button to create a new shell command for the current file type. You must select an internal name for your new command, and that name must obey the following rules:
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls16\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls16\adjustright {
It cannot be blank.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls16\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls16\adjustright {
It cannot contain any backslash ("\\") characters.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls16\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls16\adjustright {
It must be unique for this file type. That is, the internal name for your new command cannot match the internal names (upper/lower case is irrelevant) of any existing shell commands, whether or not they are enabled.
\par }\pard \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright {Type in the desired internal name, then click }{\b OK}{ (or press }{\b Enter}{
). ContextEdit will verify that your new name meets the requirements. If not, it will present an appropriate error message and return you to this dialog. If the new name is acceptable, ContextEdit will present the }{\uldb Command Editor dialog}{\v 
HIDD_COMMAND_DLG}{ so you can fill in the rest of the information for your new command.
\par Clicking the }{\b Cancel}{ button (or pressing }{\b Esc}{) will abandon the operation and return you to the main window.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ evars}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 $}{ Using Environment Variables}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ environment variables}}}{ Using Environment Variables
\par }\pard\plain \s53\fi360\sa120\sl240\slmult0\widctlpar\adjustright \f1\fs20 {Some versions of Windows allow the use of automatic environment variable expansion in the command line for standard shell commands. ContextEdit implements this setting using the }
{\b Expand environment variables}{ checkbox in the }{\uldb Command Editor}{\v HIDD_COMMAND_DLG}{. If that checkbox is disabled, your system does not support this feature.
\par When this box is checked, Explorer will automatically expand any references to environment variables, using the }{\f2 %variable name%}{ syntax, when it executes your command. If the specified environment variable is not defined, Explorer leaves the }{\f2 
%variable name%}{ placeholder unchanged.
\par For example, if your command line is
\par }{\f2 %windir%\\Notepad.EXE
\par }{and your "windir" environment variable contains "C:\\WINDOWS", then the command that will be executed is
\par }{\f2 C:\\WINDOWS\\Notepad.EXE
\par }{If a command has this option set and contains any }{\f2 %variable name%}{ references, clearing the checkbox without editing the command accordingly 
will cause the command to stop working. ContextEdit will not attempt to resolve the references automatically, since it is conceivable that the target program may use the }{\f2 %argument%}{ syntax for a different purpose.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ revnotes1}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 K}{ notes}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 $}{ Revision notes for version 1.1}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ B:01}}}{ Revision Notes for version 1.1

\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard\plain \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls17\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls17\adjustright \f1\fs20 
{If a critical error occurs during its initial scan of the registry, program now presents an error message before shutting down.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls17\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls17\adjustright {
Fixed "Unable to access the registry" error when attempting to edit existing Shell Commands or create new ones on Win 95 systems.
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls17\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls17\adjustright {Added }{\b 
Expand environment variables}{ checkbox to the }{\uldb Command Editor}{\v HIDD_COMMAND_DLG}{ dialog. This box will be enabled only if your system supports this feature (Win 95 does not).
\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls17\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls17\adjustright {
Fixed problem with program continuing to report associations as "broken" even after they had been repaired by the }{\b Move to master file type}{ procedure.
\par }\pard\plain \s54\sa120\sl240\slmult0\keepn\widctlpar\adjustright \b\f1\cf2 {\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 #}{ revnotes2}}${\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {
\cs15\fs16\up6 $}{ Revision notes for version 1.2}}K{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 K}{ notes}}+{\footnote \pard\plain \s16\nowidctlpar\adjustright \fs20 {\cs15\fs16\up6 +}{ B:02}}}{ Revision Notes for version 1.2

\par {\pntext\pard\plain\s53 \f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard\plain \s53\fi-360\li720\sa120\sl240\slmult0\widctlpar\jclisttab\tx720{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls18\adjustright \f1\fs20 
{Fixed bug that caused the program to get stuck in an endless loop if it encountered a circular reference (specifically, an extension key whose default value contains the name of the same key) when reading the registry. Program also presents 
a warning message when you select such a key in the master list. This (rare) situation doesn't seem to cause any problems for Windows itself, so ContextEdit does not offer or attempt to "repair" this "error".
\par }}