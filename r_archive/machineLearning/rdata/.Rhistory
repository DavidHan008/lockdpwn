advice <- read.csv("advice.csv", header=T, stringsAsFactors = F)
advice
open(advice)
open("advice.csv"
)
place <- sapply(advice[,2], extractNoum, USE.NAMES = F)
place <- sapply(advice[,2], extractNoun, USE.NAMES = F)
place
c <- unlist(place)
c
place2 <- Filter(function(x), {nchar(x) >= 2 & nchar(x) <= 5)}, c)
place2 <- Filter(function(x) {nchar(x) >= 2 & nchar(x) <= 5)}, c)
place2 <- Filter(function(x) {nchar(x) >= 2 & nchar(x) <= 5},c)
place2
res <- str_replace_all(place2, "[^[:alpha:]]" , "")
library("stringr")
res <- str_replace_all(place2, "[^[:alpha:]]" , "")
res
res <- res[res != ""]
res
wordcount <- table(res)
wordcount
wordcount2 <- sort(table(res), decreasing = T)
wordcount2
library(wordcloud)
install.packages("wordcloud")
install.packages("RColorBrewer")
palete <- brewer.pal(8, "Set2")
library(wordcloud)
library(RColorBrewer)
palete <- brewer.pal(8, "Set2")
palete
wordcloud(names(wordcount), freq = wordcount , scale=c(3,1), rot.per = 0.25, min.freq = 1, random.order = F, random.color = T, colors = palete)
c(3,1)
keyword <- dimnames(wordcount2[1:10])$res
keyword
keyword <- dimnames(wordcount2[1:10])
keyword
keyword <- dimnames(wordcount2[1:10])$res
keyword
contents <- c()
contents
for (i in 1:6){
inter <- intersect(place[[i]], keyword)
contents <- rbind(contents, table(inter)[keyword])
}
contents
inter
rownames(contents) <- advice$DATE
colname(contents) <- keyword
colnames(contents) <- keyword
contents
contents[which(is.na(contents))] <- 0
contents
advice2 <- read.csv("advice2.csv", header =T ,stringsAsFactors = F)
rownames(advice2) <- advice2[,1]
advice2
advice2 <- advice2[-1]
head(advice2)
advice3 <- ifelse(advice2 > mean(apply(advice2, 2, mean)), 1 ,0)
head(advice3)
library(arules)
trans <- as.matrix(advice3, "Transaction")
trans
head(trans)
rules1 <- apriori(trans, parameter = list(supp=0.3, conf=0.7, target="rules"))
rules1
inspect(sort(rules1))
inspect(sort(rules1))
inspect(rules1)
help(inspect)
arules::inspect(sort(rules1))
rules2 <- subset(rules1, subset = lhs %pin% '초밥' & confidence > 0.7)
rules2
arules::inspect(sort(rules2))
rules2 <- subset(rules1, subset = lhs %pin% '초밥')
arules::inspect(sort(rules2))
image(trans)
library(arulesViz)
install.packages("arulesViz")
library(arulesViz)
plot(rules1)
plot(rules1, method="grouped")
plot(rules1)
plot(rules1, method="grouped")
plot(rules1, method="graph")
plot(rules1, method="graph", control = list(type="items"))
plot(rules1, method="paracoord", control = list(reorder = TRUE)
)
cor(advice2)
library(corrgram)
install.packages("corrgram")
library(corrgram)
corrgram(cor(advice2))
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(cor(advice2))
libcurlVersion(sna)
library(sna)
library(rgl)
advice_square <- t(as.matrix(advice2)) %*% as.matrix(advice2)
advice_square
gplot(sqrt(sqrt(advice_square)), displaylabel = T, vertex.cex = sqrt(diag(advice_square)) * 0.01, label = rownames(advice_square), edge.col = "blue", boxed.labels = F, arrowhead.cex = 0.01, edge.lwd = 0.01, vertex.alpha = 0.01)
gplot(sqrt(sqrt(advice_square)), displaylabel = T, vertex.cex = sqrt(diag(advice_square)) * 0.01, label = rownames(advice_square), edge.col = "blue", vertex.col = "green", boxed.labels = F, arrowhead.cex = 0.01, edge.lwd = 0.01, vertex.alpha = 0.01)
gplot(sqrt(sqrt(advice_square)), displaylabel = T, vertex.cex = sqrt(diag(advice_square)) * 0.01, label = rownames(advice_square), edge.col = "orange", vertex.col = "green", boxed.labels = F, arrowhead.cex = 0.01, edge.lwd = 0.01, vertex.alpha = 0.01)
gplot(sqrt(sqrt(advice_square)), displaylabel = T, vertex.cex = sqrt(diag(advice_square)) * 0.01, label = rownames(advice_square), edge.col = "orange", vertex.col = "green", boxed.labels = F, arrowhead.cex = 0.01, edge.lwd = 0.01)
help(gplot)
library(zoo)
dates <- as.Date(rownames(advice2), format="%Y-%m-%d")
dates
time_keywords <- zoo(advice2, dates)
time_keywords
plot(time_keywords)
help(zoo)
ccf(advice2$고등어, advice2$연어, main = "고등어 vs 연어")
help(ccf)
ls
tele <- read.csv("tele.csv", header = F)
levels_all <- union(levels(tele$V1), levels(tele$V2))
levels_all
tele
tele$from <- factor(tele$V1, levels=levels_all)
tele$to <- factor(tele$V2, levels = levels_all)
tele
tele2$from2 <- as.integer(tele$from)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele
tele_mat <- cbind(from = tele$from2, to = tele$to2, cnt = tele$V3)
tele_mat
tele.w <- graph.edgelist(tele_mat[,1:2])
library(igraph)
install.packages("igraph")
library(igraph)
tele.w <- graph.edgelist(tele_mat[,1:2])
tele_mat[,1:2])
tele_mat[,1:2]
tele_mat
E(tele.w)$weight <- tele_mat[,3]
E(tele.w)$weight
str(tele.w)
tele.diag <- rep(0,16) + 15
tele.diag
tele.name <- levels_all
plot(tele.w, vertex.size=10, vertex.shape="ircle", vertex.size=tele.diag, vertex.label=tele.name, vertex.label.font=1, vertex.label.cex= 1+sqrt(tele.diag)/15, edge.width=2+E(tele.w)$weight/2, edge.arrow.width=E(tele.w)$weight/50)
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
plot(tele.w, vertex.size=10, vertex.shape="circle", vertex.size=tele.diag, vertex.label=tele.name, vertex.label.font=1, vertex.label.cex= 1+sqrt(tele.diag)/15, edge.width=2+E(tele.w)$weight/2, edge.arrow.width=E(tele.w)$weight/50)
plot(tele.w, vertex.size=10, vertex.shape="circle", vertex.size=tele.diag, vertex.label=tele.name, vertex.label.font=1, vertex.label.cex= 1+sqrt(tele.diag)/15, edge.width=2+E(tele.w)$weight/2, edge.arrow.width=E(tele.w)$weight/50, encodeString("UTF-8"))
plot(tele.w, vertex.size=10, vertex.shape="circle", vertex.size=tele.diag, vertex.label=tele.name, vertex.label.font=1, vertex.label.cex= 1+sqrt(tele.diag)/15, edge.width=2+E(tele.w)$weight/2, edge.arrow.width=E(tele.w)$weight/50)
install.packages("extrafont")
library(extrafont)
font_import()
library(igraph)
#전화
tele <- read.csv("tele.csv",header=F)
levels_all <- union(levels(tele$V1) , levels(tele$V2))
tele$from <- factor(tele$V1 , levels = levels_all)
tele$to <- factor(tele$V2 , levels = levels_all)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele_mat <- cbind(from = tele$from2 , to = tele$to2 , cnt = tele$V3)
tele.w <- graph.edgelist(tele_mat[,1:2])
E(tele.w)$weight <- tele_mat[,3]
str(tele.w)
tele.diag <- rep(0,16) + 5
tele.name <- levels_all
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
library(igraph)
#전화
tele <- read.csv("tele.csv",header=F)
levels_all <- union(levels(tele$V1) , levels(tele$V2))
tele$from <- factor(tele$V1 , levels = levels_all)
tele$to <- factor(tele$V2 , levels = levels_all)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele_mat <- cbind(from = tele$from2 , to = tele$to2 , cnt = tele$V3)
tele.w <- graph.edgelist(tele_mat[,1:2])
E(tele.w)$weight <- tele_mat[,3]
str(tele.w)
tele.diag <- rep(0,16) + 5
tele.name <- levels_all
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
library(igraph)
#전화
tele <- read.csv("tele.csv",header=F)
levels_all <- union(levels(tele$V1) , levels(tele$V2))
tele$from <- factor(tele$V1 , levels = levels_all)
tele$to <- factor(tele$V2 , levels = levels_all)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele_mat <- cbind(from = tele$from2 , to = tele$to2 , cnt = tele$V3)
tele.w <- graph.edgelist(tele_mat[,1:2])
E(tele.w)$weight <- tele_mat[,3]
str(tele.w)
tele.diag <- rep(0,16) + 5
tele.name <- levels_all
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
library(igraph)
#전화
tele <- read.csv("tele.csv",header=F)
levels_all <- union(levels(tele$V1) , levels(tele$V2))
tele$from <- factor(tele$V1 , levels = levels_all)
tele$to <- factor(tele$V2 , levels = levels_all)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele_mat <- cbind(from = tele$from2 , to = tele$to2 , cnt = tele$V3)
tele.w <- graph.edgelist(tele_mat[,1:2])
E(tele.w)$weight <- tele_mat[,3]
str(tele.w)
tele.diag <- rep(0,16) + 5
tele.name <- levels_all
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
library(igraph)
#전화
tele <- read.csv("tele.csv",header=F)
levels_all <- union(levels(tele$V1) , levels(tele$V2))
tele$from <- factor(tele$V1 , levels = levels_all)
tele$to <- factor(tele$V2 , levels = levels_all)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele_mat <- cbind(from = tele$from2 , to = tele$to2 , cnt = tele$V3)
tele.w <- graph.edgelist(tele_mat[,1:2])
E(tele.w)$weight <- tele_mat[,3]
str(tele.w)
tele.diag <- rep(0,16) + 5
tele.name <- levels_all
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
library(igraph)
#전화
tele <- read.csv("tele.csv",header=F)
levels_all <- union(levels(tele$V1) , levels(tele$V2))
tele$from <- factor(tele$V1 , levels = levels_all)
tele$to <- factor(tele$V2 , levels = levels_all)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele_mat <- cbind(from = tele$from2 , to = tele$to2 , cnt = tele$V3)
tele.w <- graph.edgelist(tele_mat[,1:2])
E(tele.w)$weight <- tele_mat[,3]
str(tele.w)
tele.diag <- rep(0,16) + 5
tele.name <- levels_all
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
library(sna)
library(sna)
vertex.col <- c(rep("blue",n),rep("green",m))
vertex.cex <- c(rep(2,n),rep(2,m))
gplot(book_mat2, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col=vertex.col, vertex.cex=vertex.cex,
label.col=vertex.col, label.cex=1.2, usearrows=F)
n <- nrow(book_mat)
m <- ncol(book_mat)
book_mat2 <- rbind(cbind(matrix(0,n,n),book_mat),cbind(t(book_mat),matrix(0,m,m)))
book_mat2
library(sna)
vertex.col <- c(rep("blue",n),rep("green",m))
vertex.cex <- c(rep(2,n),rep(2,m))
gplot(book_mat2, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col=vertex.col, vertex.cex=vertex.cex,
label.col=vertex.col, label.cex=1.2, usearrows=F)
n <- nrow(book_mat)
m <- ncol(book_mat)
book_mat2 <- rbind(cbind(matrix(0,n,n),book_mat),cbind(t(book_mat),matrix(0,m,m)))
book_mat2
library(sna)
vertex.col <- c(rep("blue",n),rep("green",m))
vertex.cex <- c(rep(2,n),rep(2,m))
gplot(book_mat2, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col=vertex.col, vertex.cex=vertex.cex,
label.col=vertex.col, label.cex=1.2, usearrows=F)
#BOOK
book <- read.csv("book.csv",header=T , stringsAsFactors = F)
book[is.na(book)] = 0
rownames(book) <- book[,1]
book <- book[-1]
book_mat <- as.matrix(book)
book_mat
n <- nrow(book_mat)
m <- ncol(book_mat)
book_mat2 <- rbind(cbind(matrix(0,n,n),book_mat),cbind(t(book_mat),matrix(0,m,m)))
book_mat2
library(sna)
vertex.col <- c(rep("blue",n),rep("green",m))
vertex.cex <- c(rep(2,n),rep(2,m))
gplot(book_mat2, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col=vertex.col, vertex.cex=vertex.cex,
label.col=vertex.col, label.cex=1.2, usearrows=F)
book_mat3 <- book_mat %*% t(book_mat)
book_mat3
diag(book_mat3) <- rep(0, dim(book_mat3)[1])
diag
diag(book_mat3)
book_mat3[book_mat3 > 0] = 1
book_mat3
gplot(book_mat3 , mode="circle", displaylabels = T, boxed.labels=F, vertex.col="blue", vertex.cex=2, label.col="green", label.cex=1.2, userarrows=F)
gplot(book_mat3 , mode="circle", displaylabels = T, boxed.labels=F, vertex.col="blue", vertex.cex=2, label.col="black", label.cex=1.2, userarrows=F)
rownames(book_mat3)
degree(book_mat3)
gden(book_mat3)
reachability(book_mat3)
set.seed(123)
yang <- rgraph(10, tprob = 0.2)
yang
gplot(yang, displayisolates = F, boxed.labels = F, vertex.cex = 2)
components(yang)
gplot(yang, displayisolates = F, boxed.labels = T, vertex.cex = 2)
gplot(yang, displaylabels = F, boxed.labels = F, vertex.cex = 2)
gplot(yang, displaylabels = T, boxed.labels = F, vertex.cex = 2)
bplot <- blockmodel(yang, cluster, h = 3)
component.dist(yang)
cszie
csize
cdist
sedist(yang, method = "hamming")
cluster <- equiv.clust(yang,method = "hamming", cluster.method="complete")
cluster
plot(cluster)
bplot <- blockmodel(yang, cluster, h = 3)
bplot
plot(bplot)
yang
geodist(yang)$gdist
closeness(book_mat3)
rownames(book_mat3)[which.max(closeness(book_mat3))]
range(tele_mat[,2])
tele_mat2
tele_mat
tele_mat2 <- matrix(0, 12 , 12)
tele_mat2
for(i in 1:16)
{
tele_mat2[as.integer(tele_mat[i,][1]), as.integer(tele_mat[i,][2])] = as.integer(tele_mat[i,][3])}
tele_mat2
rownames(tele_mat2) <- union(levels(tele$V1) , levels(tele$V2))
colnames(tele_mat2) <- union(levels(tele$V1) , levels(tele$V2))
tele_mat2
gplot(tele_mat2, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col="blue", vertex.cex=2, edge.lwd = tele_mat2 ,
label.col="green", label.cex=1.2, usearrows=F)
betweenness(tele_mat2)
round(evcent(tele_mat2), 3)
round(evcent(t(tele_mat2)), 3)
tele_mat2
abs(eigen(tele_mat2)$vectors[,1])
abs(eigen(tele_mat2))
abs(eigen(tele_mat2)$vectors)
abs(eigen(tele_mat2)$vectors[,1])
tele_mat2
tele_mat2[,1]
tele_mat2[1,]
email_mat2 <- matrix(0, 12, 12)
email_mat2[email_mat[,1:2]] <0 1
email_mat2[email_mat[,1:2]] <- 1
netlogit(tele_mat2, email_mat2)
email <- read.csv("email.csv",header=F)
levels_all <- union(levels(email$V1) , levels(email$V2))
email$from <- factor(email$V1 , levels = levels_all)
email$to <- factor(email$V2 , levels = levels_all)
email$from2 <- as.integer(email$from)
email$to2 <- as.integer(email$to)
email_mat <- cbind(from = email$from2 , to = email$to2 , cnt = email$V3)
email.w <- graph.edgelist(email_mat[,1:2])
E(email.w)$weight <- email_mat[,3]
str(email.w)
email.diag <- rep(0,16) + 5
email.name <- levels_all
#변환
email_mat2 <- matrix(0 , 12 , 12)
email_mat2[email_mat[,1:2]] <- 1
rownames(email_mat2) <- email.name
colnames(email_mat2) <- email.name
email_mat2
netlogit(tele_mat2, email_mat2)
netlogit(tele_mat2, email_mat2)
netlogit(tele_mat2 , email_mat2)
tele <- read.csv("tele.csv",header=F)
levels_all <- union(levels(tele$V1) , levels(tele$V2))
tele$from <- factor(tele$V1 , levels = levels_all)
tele$to <- factor(tele$V2 , levels = levels_all)
tele$from2 <- as.integer(tele$from)
tele$to2 <- as.integer(tele$to)
tele_mat <- cbind(from = tele$from2 , to = tele$to2 , cnt = tele$V3)
tele.w <- graph.edgelist(tele_mat[,1:2])
E(tele.w)$weight <- tele_mat[,3]
str(tele.w)
tele.diag <- rep(0,16) + 5
tele.name <- levels_all
plot(tele.w,
vertex.size=10,vertex.shape="circle",vertex.size=tele.diag,
vertex.label=tele.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(tele.diag)/15,
edge.width=2+E(tele.w)$weight/2, edge.arrow.width= E(tele.w)$weight/50)
#메일
email <- read.csv("email.csv",header=F)
levels_all <- union(levels(email$V1) , levels(email$V2))
email$from <- factor(email$V1 , levels = levels_all)
email$to <- factor(email$V2 , levels = levels_all)
email$from2 <- as.integer(email$from)
email$to2 <- as.integer(email$to)
email_mat <- cbind(from = email$from2 , to = email$to2 , cnt = email$V3)
email.w <- graph.edgelist(email_mat[,1:2])
E(email.w)$weight <- email_mat[,3]
str(email.w)
email.diag <- rep(0,16) + 5
email.name <- levels_all
plot(email.w,
vertex.size=10,vertex.shape="circle",vertex.size=email.diag,
vertex.label=email.name,vertex.label.font=1,
vertex.label.cex=1+sqrt(email.diag)/15,
edge.width=2+E(email.w)$weight/2, edge.arrow.width= E(email.w)$weight/50)
#BOOK
book <- read.csv("book.csv",header=T , stringsAsFactors = F)
book[is.na(book)] = 0
rownames(book) <- book[,1]
book <- book[-1]
book_mat <- as.matrix(book)
book_mat
n <- nrow(book_mat)
m <- ncol(book_mat)
book_mat2 <- rbind(cbind(matrix(0,n,n),book_mat),cbind(t(book_mat),matrix(0,m,m)))
book_mat2
library(sna)
vertex.col <- c(rep("blue",n),rep("green",m))
vertex.cex <- c(rep(2,n),rep(2,m))
gplot(book_mat2, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col=vertex.col, vertex.cex=vertex.cex,
label.col=vertex.col, label.cex=1.2, usearrows=F)
book_mat3 <- book_mat %*% t(book_mat)
diag(book_mat3) <- rep(0 , dim(book_mat3)[1])
book_mat3[book_mat3 > 0] = 1
book_mat3
gplot(book_mat3, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col="blue", vertex.cex=2,
label.col="green", label.cex=1.2, usearrows=F)
rownames(book_mat3)
degree(book_mat3)
degree(book_mat3 , cmode ="indegree")
degree(book_mat3 , cmode ="outdegree")
gden(book_mat3)
reachability(book_mat3)
#무작위 그래프샘플
set.seed(123)
yang <- rgraph(10 , tprob = 0.2)
gplot(yang , displaylabels = T , boxed.labels = F , vertex.cex = 2)
components(yang)
component.dist(yang)
sedist(yang , method = "hamming")
cluster <- equiv.clust(yang , method = "hamming" , cluster.method = "complete")
plot(cluster)
bplot <- blockmodel(yang , cluster , h = 3)
plot(bplot)
bplot
yang
geodist(yang)$gdist
closeness(book_mat3)
rownames(book_mat3)[which.max(closeness(book_mat3))]
#변환
range(tele_mat[,2])
tele_mat2 <- matrix(0 , 12 , 12)
for(i in 1:16) {
tele_mat2[as.integer(tele_mat[i,][1]) , as.integer(tele_mat[i,][2])] = as.integer(tele_mat[i,][3])
}
rownames(tele_mat2) <- union(levels(tele$V1) , levels(tele$V2))
colnames(tele_mat2) <- union(levels(tele$V1) , levels(tele$V2))
tele_mat2
gplot(tele_mat2, mode="circle", displaylabels=T, boxed.labels=F,
vertex.col="blue", vertex.cex=2, edge.lwd = tele_mat2 ,
label.col="green", label.cex=1.2, usearrows=F)
tele_mat2[tele_mat2 > 0] <- 1
tele_mat2
betweenness(tele_mat2)
rownames(tele_mat2)[which.max(betweenness(tele_mat2))]
round(evcent(tele_mat2) , 3)
round(evcent(t(tele_mat2)) , 3)
abs(eigen(tele_mat2)$vectors[,1])
rownames(tele_mat2)[which.max(abs(eigen(tele_mat2)$vectors[,1]))]
#변환
email_mat2 <- matrix(0 , 12 , 12)
email_mat2[email_mat[,1:2]] <- 1
rownames(email_mat2) <- email.name
colnames(email_mat2) <- email.name
email_mat2
netlogit(tele_mat2 , email_mat2)
